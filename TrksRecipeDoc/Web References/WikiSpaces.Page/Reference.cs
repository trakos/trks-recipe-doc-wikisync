//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace TrksRecipeDoc.WikiSpaces.Page {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PageBinding", Namespace="urn:Page")]
    public partial class PageService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPageWithVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback listPageVersionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback listPagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePageOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback renamePageOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletePageOperationCompleted;
        
        private System.Threading.SendOrPostCallback lockPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback unlockPageOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PageService() {
            this.Url = global::TrksRecipeDoc.Properties.Settings.Default.TrksRecipeDoc_WikiSpaces_Page_PageService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getPageCompletedEventHandler getPageCompleted;
        
        /// <remarks/>
        public event getPageWithVersionCompletedEventHandler getPageWithVersionCompleted;
        
        /// <remarks/>
        public event listPageVersionsCompletedEventHandler listPageVersionsCompleted;
        
        /// <remarks/>
        public event listPagesCompletedEventHandler listPagesCompleted;
        
        /// <remarks/>
        public event updatePageCompletedEventHandler updatePageCompleted;
        
        /// <remarks/>
        public event createPageCompletedEventHandler createPageCompleted;
        
        /// <remarks/>
        public event renamePageCompletedEventHandler renamePageCompleted;
        
        /// <remarks/>
        public event deletePageCompletedEventHandler deletePageCompleted;
        
        /// <remarks/>
        public event lockPageCompletedEventHandler lockPageCompleted;
        
        /// <remarks/>
        public event unlockPageCompletedEventHandler unlockPageCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Page#PageSOAPApi#getPage", RequestNamespace="urn:Page", ResponseNamespace="urn:Page")]
        [return: System.Xml.Serialization.SoapElementAttribute("page")]
        public PageStruct getPage(string session, int spaceId, string name) {
            object[] results = this.Invoke("getPage", new object[] {
                        session,
                        spaceId,
                        name});
            return ((PageStruct)(results[0]));
        }
        
        /// <remarks/>
        public void getPageAsync(string session, int spaceId, string name) {
            this.getPageAsync(session, spaceId, name, null);
        }
        
        /// <remarks/>
        public void getPageAsync(string session, int spaceId, string name, object userState) {
            if ((this.getPageOperationCompleted == null)) {
                this.getPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPageOperationCompleted);
            }
            this.InvokeAsync("getPage", new object[] {
                        session,
                        spaceId,
                        name}, this.getPageOperationCompleted, userState);
        }
        
        private void OngetPageOperationCompleted(object arg) {
            if ((this.getPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPageCompleted(this, new getPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Page#PageSOAPApi#getPageWithVersion", RequestNamespace="urn:Page", ResponseNamespace="urn:Page")]
        [return: System.Xml.Serialization.SoapElementAttribute("page")]
        public PageStruct getPageWithVersion(string session, int spaceId, string name, int version) {
            object[] results = this.Invoke("getPageWithVersion", new object[] {
                        session,
                        spaceId,
                        name,
                        version});
            return ((PageStruct)(results[0]));
        }
        
        /// <remarks/>
        public void getPageWithVersionAsync(string session, int spaceId, string name, int version) {
            this.getPageWithVersionAsync(session, spaceId, name, version, null);
        }
        
        /// <remarks/>
        public void getPageWithVersionAsync(string session, int spaceId, string name, int version, object userState) {
            if ((this.getPageWithVersionOperationCompleted == null)) {
                this.getPageWithVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPageWithVersionOperationCompleted);
            }
            this.InvokeAsync("getPageWithVersion", new object[] {
                        session,
                        spaceId,
                        name,
                        version}, this.getPageWithVersionOperationCompleted, userState);
        }
        
        private void OngetPageWithVersionOperationCompleted(object arg) {
            if ((this.getPageWithVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPageWithVersionCompleted(this, new getPageWithVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Page#PageSOAPApi#listPageVersions", RequestNamespace="urn:Page", ResponseNamespace="urn:Page")]
        [return: System.Xml.Serialization.SoapElementAttribute("pageList")]
        public PageStruct[] listPageVersions(string session, int spaceId, string name) {
            object[] results = this.Invoke("listPageVersions", new object[] {
                        session,
                        spaceId,
                        name});
            return ((PageStruct[])(results[0]));
        }
        
        /// <remarks/>
        public void listPageVersionsAsync(string session, int spaceId, string name) {
            this.listPageVersionsAsync(session, spaceId, name, null);
        }
        
        /// <remarks/>
        public void listPageVersionsAsync(string session, int spaceId, string name, object userState) {
            if ((this.listPageVersionsOperationCompleted == null)) {
                this.listPageVersionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistPageVersionsOperationCompleted);
            }
            this.InvokeAsync("listPageVersions", new object[] {
                        session,
                        spaceId,
                        name}, this.listPageVersionsOperationCompleted, userState);
        }
        
        private void OnlistPageVersionsOperationCompleted(object arg) {
            if ((this.listPageVersionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listPageVersionsCompleted(this, new listPageVersionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Page#PageSOAPApi#listPages", RequestNamespace="urn:Page", ResponseNamespace="urn:Page")]
        [return: System.Xml.Serialization.SoapElementAttribute("pageList")]
        public PageStruct[] listPages(string session, int spaceId) {
            object[] results = this.Invoke("listPages", new object[] {
                        session,
                        spaceId});
            return ((PageStruct[])(results[0]));
        }
        
        /// <remarks/>
        public void listPagesAsync(string session, int spaceId) {
            this.listPagesAsync(session, spaceId, null);
        }
        
        /// <remarks/>
        public void listPagesAsync(string session, int spaceId, object userState) {
            if ((this.listPagesOperationCompleted == null)) {
                this.listPagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistPagesOperationCompleted);
            }
            this.InvokeAsync("listPages", new object[] {
                        session,
                        spaceId}, this.listPagesOperationCompleted, userState);
        }
        
        private void OnlistPagesOperationCompleted(object arg) {
            if ((this.listPagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listPagesCompleted(this, new listPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Page#PageSOAPApi#updatePage", RequestNamespace="urn:Page", ResponseNamespace="urn:Page")]
        [return: System.Xml.Serialization.SoapElementAttribute("updatedPage")]
        public PageStruct updatePage(string session, int spaceId, PageStruct page) {
            object[] results = this.Invoke("updatePage", new object[] {
                        session,
                        spaceId,
                        page});
            return ((PageStruct)(results[0]));
        }
        
        /// <remarks/>
        public void updatePageAsync(string session, int spaceId, PageStruct page) {
            this.updatePageAsync(session, spaceId, page, null);
        }
        
        /// <remarks/>
        public void updatePageAsync(string session, int spaceId, PageStruct page, object userState) {
            if ((this.updatePageOperationCompleted == null)) {
                this.updatePageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePageOperationCompleted);
            }
            this.InvokeAsync("updatePage", new object[] {
                        session,
                        spaceId,
                        page}, this.updatePageOperationCompleted, userState);
        }
        
        private void OnupdatePageOperationCompleted(object arg) {
            if ((this.updatePageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePageCompleted(this, new updatePageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Page#PageSOAPApi#createPage", RequestNamespace="urn:Page", ResponseNamespace="urn:Page")]
        [return: System.Xml.Serialization.SoapElementAttribute("page")]
        public PageStruct createPage(string session, int spaceId, string name, string content, string comment) {
            object[] results = this.Invoke("createPage", new object[] {
                        session,
                        spaceId,
                        name,
                        content,
                        comment});
            return ((PageStruct)(results[0]));
        }
        
        /// <remarks/>
        public void createPageAsync(string session, int spaceId, string name, string content, string comment) {
            this.createPageAsync(session, spaceId, name, content, comment, null);
        }
        
        /// <remarks/>
        public void createPageAsync(string session, int spaceId, string name, string content, string comment, object userState) {
            if ((this.createPageOperationCompleted == null)) {
                this.createPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePageOperationCompleted);
            }
            this.InvokeAsync("createPage", new object[] {
                        session,
                        spaceId,
                        name,
                        content,
                        comment}, this.createPageOperationCompleted, userState);
        }
        
        private void OncreatePageOperationCompleted(object arg) {
            if ((this.createPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPageCompleted(this, new createPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Page#PageSOAPApi#renamePage", RequestNamespace="urn:Page", ResponseNamespace="urn:Page")]
        public void renamePage(string session, int spaceId, ref PageStruct page, string new_name) {
            object[] results = this.Invoke("renamePage", new object[] {
                        session,
                        spaceId,
                        page,
                        new_name});
            page = ((PageStruct)(results[0]));
        }
        
        /// <remarks/>
        public void renamePageAsync(string session, int spaceId, PageStruct page, string new_name) {
            this.renamePageAsync(session, spaceId, page, new_name, null);
        }
        
        /// <remarks/>
        public void renamePageAsync(string session, int spaceId, PageStruct page, string new_name, object userState) {
            if ((this.renamePageOperationCompleted == null)) {
                this.renamePageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrenamePageOperationCompleted);
            }
            this.InvokeAsync("renamePage", new object[] {
                        session,
                        spaceId,
                        page,
                        new_name}, this.renamePageOperationCompleted, userState);
        }
        
        private void OnrenamePageOperationCompleted(object arg) {
            if ((this.renamePageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.renamePageCompleted(this, new renamePageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Page#PageSOAPApi#deletePage", RequestNamespace="urn:Page", ResponseNamespace="urn:Page")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool deletePage(string session, int spaceId, PageStruct page) {
            object[] results = this.Invoke("deletePage", new object[] {
                        session,
                        spaceId,
                        page});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deletePageAsync(string session, int spaceId, PageStruct page) {
            this.deletePageAsync(session, spaceId, page, null);
        }
        
        /// <remarks/>
        public void deletePageAsync(string session, int spaceId, PageStruct page, object userState) {
            if ((this.deletePageOperationCompleted == null)) {
                this.deletePageOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletePageOperationCompleted);
            }
            this.InvokeAsync("deletePage", new object[] {
                        session,
                        spaceId,
                        page}, this.deletePageOperationCompleted, userState);
        }
        
        private void OndeletePageOperationCompleted(object arg) {
            if ((this.deletePageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletePageCompleted(this, new deletePageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Page#PageSOAPApi#lockPage", RequestNamespace="urn:Page", ResponseNamespace="urn:Page")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool lockPage(string session, int pageId) {
            object[] results = this.Invoke("lockPage", new object[] {
                        session,
                        pageId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void lockPageAsync(string session, int pageId) {
            this.lockPageAsync(session, pageId, null);
        }
        
        /// <remarks/>
        public void lockPageAsync(string session, int pageId, object userState) {
            if ((this.lockPageOperationCompleted == null)) {
                this.lockPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlockPageOperationCompleted);
            }
            this.InvokeAsync("lockPage", new object[] {
                        session,
                        pageId}, this.lockPageOperationCompleted, userState);
        }
        
        private void OnlockPageOperationCompleted(object arg) {
            if ((this.lockPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lockPageCompleted(this, new lockPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Page#PageSOAPApi#unlockPage", RequestNamespace="urn:Page", ResponseNamespace="urn:Page")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool unlockPage(string session, int pageId) {
            object[] results = this.Invoke("unlockPage", new object[] {
                        session,
                        pageId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void unlockPageAsync(string session, int pageId) {
            this.unlockPageAsync(session, pageId, null);
        }
        
        /// <remarks/>
        public void unlockPageAsync(string session, int pageId, object userState) {
            if ((this.unlockPageOperationCompleted == null)) {
                this.unlockPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunlockPageOperationCompleted);
            }
            this.InvokeAsync("unlockPage", new object[] {
                        session,
                        pageId}, this.unlockPageOperationCompleted, userState);
        }
        
        private void OnunlockPageOperationCompleted(object arg) {
            if ((this.unlockPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unlockPageCompleted(this, new unlockPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://www.wikispaces.com/page/api")]
    public partial class PageStruct {
        
        private int idField;
        
        private int versionIdField;
        
        private string nameField;
        
        private int spaceIdField;
        
        private int latest_versionField;
        
        private int versionsField;
        
        private bool is_read_onlyField;
        
        private string view_groupField;
        
        private string edit_groupField;
        
        private string commentField;
        
        private string contentField;
        
        private string htmlField;
        
        private int date_createdField;
        
        private int user_createdField;
        
        private string user_created_usernameField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int versionId {
            get {
                return this.versionIdField;
            }
            set {
                this.versionIdField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int spaceId {
            get {
                return this.spaceIdField;
            }
            set {
                this.spaceIdField = value;
            }
        }
        
        /// <remarks/>
        public int latest_version {
            get {
                return this.latest_versionField;
            }
            set {
                this.latest_versionField = value;
            }
        }
        
        /// <remarks/>
        public int versions {
            get {
                return this.versionsField;
            }
            set {
                this.versionsField = value;
            }
        }
        
        /// <remarks/>
        public bool is_read_only {
            get {
                return this.is_read_onlyField;
            }
            set {
                this.is_read_onlyField = value;
            }
        }
        
        /// <remarks/>
        public string view_group {
            get {
                return this.view_groupField;
            }
            set {
                this.view_groupField = value;
            }
        }
        
        /// <remarks/>
        public string edit_group {
            get {
                return this.edit_groupField;
            }
            set {
                this.edit_groupField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        public string html {
            get {
                return this.htmlField;
            }
            set {
                this.htmlField = value;
            }
        }
        
        /// <remarks/>
        public int date_created {
            get {
                return this.date_createdField;
            }
            set {
                this.date_createdField = value;
            }
        }
        
        /// <remarks/>
        public int user_created {
            get {
                return this.user_createdField;
            }
            set {
                this.user_createdField = value;
            }
        }
        
        /// <remarks/>
        public string user_created_username {
            get {
                return this.user_created_usernameField;
            }
            set {
                this.user_created_usernameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getPageCompletedEventHandler(object sender, getPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PageStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PageStruct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getPageWithVersionCompletedEventHandler(object sender, getPageWithVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPageWithVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPageWithVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PageStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PageStruct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void listPageVersionsCompletedEventHandler(object sender, listPageVersionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listPageVersionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listPageVersionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PageStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PageStruct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void listPagesCompletedEventHandler(object sender, listPagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listPagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listPagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PageStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PageStruct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void updatePageCompletedEventHandler(object sender, updatePageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatePageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatePageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PageStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PageStruct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void createPageCompletedEventHandler(object sender, createPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PageStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PageStruct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void renamePageCompletedEventHandler(object sender, renamePageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class renamePageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal renamePageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PageStruct page {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PageStruct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void deletePageCompletedEventHandler(object sender, deletePageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deletePageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deletePageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void lockPageCompletedEventHandler(object sender, lockPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lockPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lockPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void unlockPageCompletedEventHandler(object sender, unlockPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class unlockPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal unlockPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591