//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace TrksRecipeDoc.WikiSpaces.Tag {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TagBinding", Namespace="urn:Tag")]
    public partial class TagService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback listTagsForPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback createTagOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTagOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateTagsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TagService() {
            this.Url = global::TrksRecipeDoc.Properties.Settings.Default.TrksRecipeDoc_WikiSpaces_Tag_TagService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event listTagsForPageCompletedEventHandler listTagsForPageCompleted;
        
        /// <remarks/>
        public event createTagCompletedEventHandler createTagCompleted;
        
        /// <remarks/>
        public event deleteTagCompletedEventHandler deleteTagCompleted;
        
        /// <remarks/>
        public event updateTagsCompletedEventHandler updateTagsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Tag#TagSOAPApi#listTagsForPage", RequestNamespace="urn:Tag", ResponseNamespace="urn:Tag")]
        [return: System.Xml.Serialization.SoapElementAttribute("tagList")]
        public TagStruct[] listTagsForPage(string session, int pageId) {
            object[] results = this.Invoke("listTagsForPage", new object[] {
                        session,
                        pageId});
            return ((TagStruct[])(results[0]));
        }
        
        /// <remarks/>
        public void listTagsForPageAsync(string session, int pageId) {
            this.listTagsForPageAsync(session, pageId, null);
        }
        
        /// <remarks/>
        public void listTagsForPageAsync(string session, int pageId, object userState) {
            if ((this.listTagsForPageOperationCompleted == null)) {
                this.listTagsForPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistTagsForPageOperationCompleted);
            }
            this.InvokeAsync("listTagsForPage", new object[] {
                        session,
                        pageId}, this.listTagsForPageOperationCompleted, userState);
        }
        
        private void OnlistTagsForPageOperationCompleted(object arg) {
            if ((this.listTagsForPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listTagsForPageCompleted(this, new listTagsForPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Tag#TagSOAPApi#createTag", RequestNamespace="urn:Tag", ResponseNamespace="urn:Tag")]
        [return: System.Xml.Serialization.SoapElementAttribute("tagObj")]
        public TagStruct createTag(string session, int pageId, string tag) {
            object[] results = this.Invoke("createTag", new object[] {
                        session,
                        pageId,
                        tag});
            return ((TagStruct)(results[0]));
        }
        
        /// <remarks/>
        public void createTagAsync(string session, int pageId, string tag) {
            this.createTagAsync(session, pageId, tag, null);
        }
        
        /// <remarks/>
        public void createTagAsync(string session, int pageId, string tag, object userState) {
            if ((this.createTagOperationCompleted == null)) {
                this.createTagOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateTagOperationCompleted);
            }
            this.InvokeAsync("createTag", new object[] {
                        session,
                        pageId,
                        tag}, this.createTagOperationCompleted, userState);
        }
        
        private void OncreateTagOperationCompleted(object arg) {
            if ((this.createTagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createTagCompleted(this, new createTagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Tag#TagSOAPApi#deleteTag", RequestNamespace="urn:Tag", ResponseNamespace="urn:Tag")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool deleteTag(string session, int pageId, string tag) {
            object[] results = this.Invoke("deleteTag", new object[] {
                        session,
                        pageId,
                        tag});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTagAsync(string session, int pageId, string tag) {
            this.deleteTagAsync(session, pageId, tag, null);
        }
        
        /// <remarks/>
        public void deleteTagAsync(string session, int pageId, string tag, object userState) {
            if ((this.deleteTagOperationCompleted == null)) {
                this.deleteTagOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTagOperationCompleted);
            }
            this.InvokeAsync("deleteTag", new object[] {
                        session,
                        pageId,
                        tag}, this.deleteTagOperationCompleted, userState);
        }
        
        private void OndeleteTagOperationCompleted(object arg) {
            if ((this.deleteTagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTagCompleted(this, new deleteTagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Tag#TagSOAPApi#updateTags", RequestNamespace="urn:Tag", ResponseNamespace="urn:Tag")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool updateTags(string session, int pageId, string[] tags) {
            object[] results = this.Invoke("updateTags", new object[] {
                        session,
                        pageId,
                        tags});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateTagsAsync(string session, int pageId, string[] tags) {
            this.updateTagsAsync(session, pageId, tags, null);
        }
        
        /// <remarks/>
        public void updateTagsAsync(string session, int pageId, string[] tags, object userState) {
            if ((this.updateTagsOperationCompleted == null)) {
                this.updateTagsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateTagsOperationCompleted);
            }
            this.InvokeAsync("updateTags", new object[] {
                        session,
                        pageId,
                        tags}, this.updateTagsOperationCompleted, userState);
        }
        
        private void OnupdateTagsOperationCompleted(object arg) {
            if ((this.updateTagsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateTagsCompleted(this, new updateTagsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://www.wikispaces.com/tag/api")]
    public partial class TagStruct {
        
        private int idField;
        
        private string nameField;
        
        private int page_idField;
        
        private int date_createdField;
        
        private int user_createdField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int page_id {
            get {
                return this.page_idField;
            }
            set {
                this.page_idField = value;
            }
        }
        
        /// <remarks/>
        public int date_created {
            get {
                return this.date_createdField;
            }
            set {
                this.date_createdField = value;
            }
        }
        
        /// <remarks/>
        public int user_created {
            get {
                return this.user_createdField;
            }
            set {
                this.user_createdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void listTagsForPageCompletedEventHandler(object sender, listTagsForPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listTagsForPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listTagsForPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TagStruct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TagStruct[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void createTagCompletedEventHandler(object sender, createTagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createTagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createTagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TagStruct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TagStruct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void deleteTagCompletedEventHandler(object sender, deleteTagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void updateTagsCompletedEventHandler(object sender, updateTagsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateTagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateTagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591